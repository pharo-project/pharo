"
A superclass for classes used to test critics.
"
Class {
	#name : 'RBSmalllintTestSuperclassObject',
	#superclass : 'Object',
	#category : 'Refactoring-Critics-Tests-Base',
	#package : 'Refactoring-Critics-Tests',
	#tag : 'Base'
}

{ #category : 'accessing' }
RBSmalllintTestSuperclassObject class >> defaultExplicitClassReferences [
	"generated by #updateDefaultExplicitClassReferences"
	^ {RBSmalllintTestObject. RBSmalllintTestNoClassCommentObject. RBSmalllintTestAddRemoveDependentsObject. RBSmalllintTestAddRemoveDependentsGoodObject. RBSmalllintTestDefinesEqualNotHashObject. RBSmalllintTestDefinesEqualNotHashGoodObject. RBSmalllintTestSuperclassObject. RBSmalllintTestLocalMethodsSameThanTraitObject}
]

{ #category : 'testing' }
RBSmalllintTestSuperclassObject class >> mustNotBeReferenced [
	^ false
]

{ #category : 'compiling' }
RBSmalllintTestSuperclassObject class >> updateDefaultExplicitClassReferences [
	"Run after adding a new subclass to the hierachy:
		self updateDefaultExplicitClassReferences
	"

	"avoid self so it's always compiled in the metaclass of the
	of the root even when sent to a subclass"
	RBSmalllintTestSuperclassObject class
		compile:
			'defaultExplicitClassReferences
	"generated by #updateDefaultExplicitClassReferences"
	^ ',
			(RBSmalllintTestSuperclassObject withAllSubclasses asArray
				reject: [ :each | each mustNotBeReferenced ]) printString
		classified: #accessing
]

{ #category : 'methods' }
RBSmalllintTestSuperclassObject >> equivalentSuperclassMethods [
	^ self identityHash
]
